<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mycompany.app</groupId>
  <artifactId>test</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>test Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
	<plugins>
	<plugin>
    <groupId>pl.project13.maven</groupId>
    <artifactId>git-commit-id-plugin</artifactId>
    <version>2.2.1</version>
    <executions>
        <execution>
            <id>get-the-git-infos</id>
            <goals>
                <goal>revision</goal>
            </goals>
        </execution>
        <!--<execution>-->
        <!--<id>validate-the-git-infos</id>-->
        <!--<goals>-->
        <!--<goal>validateRevision</goal>-->
        <!--</goals>-->
        <!-- *NOTE*: The default phase of validateRevision is verify, but in case you want to change it, you can do so by adding the phase here -->
        <!--<phase>package</phase>-->
        <!--</execution>-->
    </executions>

    <configuration>
        <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
        <prefix>git</prefix>
        <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
        <dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
        <verbose>false</verbose>
        <generateGitPropertiesFile>true</generateGitPropertiesFile>
        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
        <format>properties</format>
        <skipPoms>true</skipPoms>
        <injectAllReactorProjects>false</injectAllReactorProjects>
        <failOnNoGitDirectory>true</failOnNoGitDirectory>
        <failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
        <skip>false</skip>
        <runOnlyOnce>false</runOnlyOnce>
        <excludeProperties>
        </excludeProperties>
        <includeOnlyProperties>
       </includeOnlyProperties>
        <useNativeGit>false</useNativeGit>
        <abbrevLength>7</abbrevLength>
        <commitIdGenerationMode>flat</commitIdGenerationMode>
        <gitDescribe>
            <skip>false</skip>
            <always>false</always>
            <abbrev>7</abbrev>
            <dirty>-dirty</dirty>
            <match>*</match>
            <forceLongFormat>false</forceLongFormat>
        </gitDescribe>
        <validationProperties>
            <validationProperty>
                <name>validating project version</name>
                <value>${project.version}</value>
                <shouldMatchTo><![CDATA[^.*(?<!-SNAPSHOT)$]]></shouldMatchTo>
            </validationProperty>
        </validationProperties>
        <validationShouldFailIfNoMatch>true</validationShouldFailIfNoMatch>
    </configuration>
</plugin>

	</plugins>
	        <filters>
      <filter>target/classes/git.properties</filter>
    </filters>
    <finalName>test</finalName>
	<resources>
      <resource>
        <directory>hash</directory>
        <filtering>true</filtering>
      </resource>
	  </resources>
  </build>
</project>
